name: build-production-images

on:
  push:
  workflow_dispatch:

jobs:
  build-docker-image:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        service:
          - frontend
    steps:
      - uses: actions/checkout@v3
      - name: Store the short SHA hash
        run: |
          echo SHORT_SHA=$(echo '${{ toJSON(github) }}' | jq -r '.sha[0:7]') >> $GITHUB_ENV
      - name: Generate the tag suffix
        run: |
          echo TAG_SUFFIX="$(date +%Y%m-)$SHORT_SHA" >> $GITHUB_ENV
      - name: Build images - ${{ matrix.service }}
        timeout-minutes: 4
        run: |
          docker build\
           --file Dockerfile.d/${{ matrix.service }}.production/Dockerfile\
           --tag ${{ matrix.service }}:${TAG_SUFFIX}\
           --target ${{ matrix.service }}-runner\
           .
      - name: Overwrite the latest tag if it is the main branch
        run: |
          docker tag ${{ matrix.service }}:${TAG_SUFFIX} ${{ matrix.service }}:latest
        if: github.ref == 'refs/heads/main'

      - name: Login to ghcr.io
        run: |
          echo ${{ secrets.TOKEN_TO_PUSH_GHCR }} | docker login ghcr.io --username ${{ github.repository_owner }} --password-stdin
      - name: Push the image to ghcr.io
        run: |
          docker tag ${{ matrix.service }}:${TAG_SUFFIX} ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-${{ matrix.service }}:${TAG_SUFFIX}
          docker push ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-${{ matrix.service }}:${TAG_SUFFIX}
      - name: Push the image to ghcr.io
        run: |
          docker tag ${{ matrix.service }}:latest ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-${{ matrix.service }}:latest
          docker push ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-${{ matrix.service }}:latest
        if: github.ref == 'refs/heads/main'

      - name: List images
        run: |
          docker images
